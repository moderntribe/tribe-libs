name: PHP Code Sniffer and Static Analysis

on:
  push:
    branches:
      - 4.x
  pull_request:
    paths:
      - 'src/**.php'

jobs:
  analyze:

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '8.0' ]

    env:
      cache_version: 1 # increment to flush all caches
      php_extensions: tokenizer, xmlwriter, simplexml

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP extension cache
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extensions }}
          key: ${{ matrix.operating-system }}-${{ env.cache_version }}-phpextensions-${{ matrix.php-versions }}

      - name: Cache PHP extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extensions }}
          coverage: none
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Check for Cached Composer Dependencies
        id: cache-composer-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache_version }}-phpextensions-${{ matrix.php-versions }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-${{ env.cache_version }}-phpextensions-${{ matrix.php-versions }}-composer-

      - name: Install updated composer dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction --optimize-autoloader

      - name: Run PHPCS code sniffer
        run: php vendor/bin/phpcs --standard=tests/phpcs.xml

      - name: Run PHPStan static analysis
        run: php vendor/bin/phpstan analyse -c tests/phpstan.neon --memory-limit=-1
